import asyncio
import logging
from aiogram.handlers import InlineQueryHandler
from aiogram import Bot, Dispatcher, Router, types
from aiogram.filters import Command
from aiogram.types import Message,InlineKeyboardMarkup,InlineKeyboardButton
from aiogram.types import CallbackQuery
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup,ReplyKeyboardMarkup,KeyboardButton
from quickdb_Help import MONGODB
from aiogram.types import InputMediaPhoto,InputFile
import requests
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import FSInputFile,InputMedia,InputMediaPhoto
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from datetime import datetime
from pytz import timezone
from aiogram.utils.keyboard import InlineKeyboardBuilder
import requests # –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ URL
from bs4 import BeautifulSoup # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTML
import time # –ú–æ–¥—É–ª—å –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã
import smtplib # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ—á—Ç–æ–π
class Currency:
	# –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
	
	# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤–º–µ—Å—Ç–µ —Å URL
	headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36'}

	current_converted_price = 0
	difference = 5 # –†–∞–∑–Ω–∏—Ü–∞ –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø–æ—á—Ç—É

	def __init__(self,count:str):
		# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞
		self.count = count.replace(',','.')  # –∑–∞–º–µ–Ω–∞ –∑–∞–ø—è—Ç—ã—Ö –Ω–∞ —Ç–æ—á–∫–∏
	def get_currency_price(self):
		DOLLAR_UAH= 'https://www.google.com/search?q='+self.count+'+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%BE%D0%B2+%D0%B2+%D0%B3%D1%80%D0%B8%D0%B2%D0%BD%D1%8B&sxsrf=APwXEdfYjTBYMsqgvODt5QrAhokVTHdeaA%3A1680021614462&ei=bhgjZLDgG46rrgS_iZfgCQ&ved=0ahUKEwiwz62ciP_9AhWOlYsKHb_EBZwQ4dUDCA8&uact=5&oq=17+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%BE%D0%B2+%D0%B2+%D0%B3%D1%80%D0%B8%D0%B2%D0%BD%D1%8B&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIICAAQBxAeEA8yBggAEAcQHjIHCAAQDRCABDIKCAAQBRAHEB4QDzIICAAQBRAeEA8yCAgAEAUQHhAPMggIABAIEB4QDzoNCAAQRxDWBBDJAxCwAzoKCAAQRxDWBBCwAzoLCAAQigUQkgMQsAM6CggAEIoFELADEEM6DQgAEOQCENYEELADGAE6FQguEIoFEMcBENEDEMgDELADEEMYAjoKCAAQCBAHEB4QDzoMCAAQCBAHEB4QDxAKOgYIABAeEA9KBAhBGABQxwNYkC9gkTNoAXABeACAAesBiAH2BZIBBTUuMS4xmAEAoAEByAERwAEB2gEGCAEQARgJ2gEGCAIQARgI&sclient=gws-wiz-serp'
		# –ü–∞—Ä—Å–∏–º –≤—Å—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
		DOLLAR_RUB= 'https://www.google.com/search?q='+self.count+'+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&sxsrf=APwXEdfKgoGgebec-WrtHHYffAlMJIcAQA%3A1680080746085&ei=av8jZMPCBI-R9u8Pq4Kh8AY&ved=0ahUKEwjDn8HA5ID-AhWPiP0HHStBCG4Q4dUDCA8&uact=5&oq=3+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIGCAAQCBAeMgYIABAIEB4yBggAEAgQHjIGCAAQCBAeMgYIABAIEB4yBggAEAgQHjIGCAAQCBAeMgYIABAIEB4yBggAEAgQHjIGCAAQCBAeOgoIABBHENYEELADOgUIABCiBEoECEEYAFCTB1igFmChF2gBcAF4AIABoQGIAcIEkgEDMi4zmAEAoAEByAEIwAEB&sclient=gws-wiz-serp'
		full_page = requests.get(DOLLAR_UAH, headers=self.headers)
		full_page2 = requests.get(DOLLAR_RUB, headers=self.headers)

		# –†–∞–∑–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ BeautifulSoup
		soup = BeautifulSoup(full_page.content, 'html.parser')
		soup2 = BeautifulSoup(full_page2.content, 'html.parser')
		# –ü–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω–æ–µ –¥–ª—è –Ω–∞—Å –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
		convert = soup.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})
		convert2 = soup2.findAll("span", {"class": "DFlfde", "class": "SwHCTb", "data-precision": 2})
		return [convert[0].text,convert2[0].text]
	def uah(self):
		currency = self.get_currency_price()[0]
		currency2 = self.get_currency_price()[1]
		return currency
	def rub(self):
		currency = self.get_currency_price()[0]
		currency2 = self.get_currency_price()[1]
		return currency2
class MyInputFile(InputFile):
    def __init__(self, file_path):
        super().__init__(file_path)
        self._file = open(file_path, 'rb')

    def read(self):
        return self._file.read()

    def close(self):
        self._file.close()

db = MONGODB(
    mongouri="mongodb://mongo:0cYDn1eBCEXPj8xmE8CI@containers-us-west-148.railway.app:5758",
    collection="–ù–§–¢ –°–∫–∞–º",
    db="–°–∫–∞–º"
              )

def send_photo(path,chat_id,image_caption=""):
    data = {
    "chat_id": chat_id, 
    "caption": image_caption,
    'parse_mode':'HTML'
    }
    url = f"https://api.telegram.org/bot{TOKEN}/sendPhoto" 
    with open(path, "rb") as image_file:
        r = requests.post(url, data=data, files={"photo": image_file})






# Create the keyboard with the buttons
support = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='üë®üèª‚Äçüíª –¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url="https://t.me/SuperRare_Supporting")],[InlineKeyboardButton(text='‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—Å—è –≤ –õ–ö', callback_data="back")]])
keyboard = ReplyKeyboardMarkup(
    keyboard=[
     [KeyboardButton(text="–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüìñ")],
     [KeyboardButton(text="NFT üñº")], 
     [KeyboardButton(text="Info ‚ÑπÔ∏è"),
      KeyboardButton(text="–¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ üë®üèª‚Äçüíª")],],

    
    resize_keyboard=True,
    row_width=3
)

TOKEN = "5647489863:AAERxmr3psaLqUJy-V-IsTeCdxuoopIX1zU"
punks = db.get(f'Cryptopunks') or 3
Kitties = db.get(f'CryptoKitties') or 6
Skellies = db.get(f'Skellies') or 6
Hasbulla = db.get(f'Hasbulla') or 6 
Yacht = db.get(f' Yacht') or 6 
Just = db.get(f'Just') or 6
Cowboy = db.get(f'Cowboy') or 6
Cowboy = db.get(f'Cowboy') or 6
Plague = db.get(f'Plague') or 6
Royals = db.get(f'Royals') or 6
Lazy = db.get(f'Lazy') or 6
Helions = db.get(f'Helions') or 6
Labs =  db.get(f'Labs') or 6
Bohemia = db.get(f'Bohemia') or 6
collection = InlineKeyboardMarkup(inline_keyboard=[
   [InlineKeyboardButton(text=f'Cryptopunks ({punks})', callback_data="Cryptopunks")],
   [InlineKeyboardButton(text=f'CryptoKitties  ({Kitties})', callback_data="CryptoKitties")],
   [InlineKeyboardButton(text=f'Skellies ({Skellies})', callback_data="Skellies")],
   [InlineKeyboardButton(text=f'Crypto Hasbulla ({Hasbulla})', callback_data="Hasbulla")],
   [InlineKeyboardButton(text=f'Bored Ape Yacht Club ({Yacht})', callback_data="Yacht")],
   [InlineKeyboardButton(text=f'Just Ape. ({Just})', callback_data="Just")],
   [InlineKeyboardButton(text=f'Crypto Cowboy Country ({Cowboy})', callback_data="Cowboy")],
   [InlineKeyboardButton(text=f'The Plague NFT ({Plague})', callback_data="Plaguey")],
   [InlineKeyboardButton(text=f'Eternal Royals Official ({Royals})', callback_data="Royals")],
   [InlineKeyboardButton(text=f'Lazy Lions ({Lazy})', callback_data="Lazy")],
   [InlineKeyboardButton(text=f'Helions ({Helions})', callback_data="Helions")],
   [InlineKeyboardButton(text=f'Sensei  Labs ({Labs})', callback_data="Sensei")],
   [InlineKeyboardButton(text=f'Bohemia ({Bohemia })', callback_data="Bohemia ")],
   [InlineKeyboardButton(text='‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—Å—è –≤ –õ–ö', callback_data="back")]
   ]
   )

send = InlineKeyboardMarkup(inline_keyboard=[
   [InlineKeyboardButton(text='‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—Å—è –≤ –õ–ö', callback_data="back")]])

menu =ReplyKeyboardMarkup(
    keyboard=[
     [KeyboardButton(text="–í—ã–≤–µ—Å—Ç–∏ üì§")],
     [KeyboardButton(text="–ü–æ–ø–æ–ª–Ω–∏—Ç—å üì•")], 
     [KeyboardButton(text="–ú–æ–∏ NFT üíµ"),
      KeyboardButton(text="–°–º–µ–Ω–∏—Ç—å –≤–∞–ª—é—Ç—É üñº")]],

    
    resize_keyboard=True,
    row_width=3
)
button1 = InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ ‚úÖ', callback_data='accept')
language_1 = InlineKeyboardButton(text='English üá∫üá∏', callback_data='en')
language_2 = InlineKeyboardButton(text='Russian üá∑üá∫', callback_data='ru')
money_ru = InlineKeyboardButton(text='RUB üá∑üá∫', callback_data='rub')
money_UAH = InlineKeyboardButton(text='UAH üá∫üá¶', callback_data='uah')
money_en = InlineKeyboardButton(text='USD üá∫üá∏', callback_data='usd')
format = "%Y.%m.%d %H:%M"
language = [language_1,language_2]
row1 = [button1]
button_list = [row1]
money_list =[money_ru,money_en,money_UAH]
markup = InlineKeyboardMarkup(inline_keyboard=[language])
inline_kb = InlineKeyboardMarkup(inline_keyboard=button_list)
money = InlineKeyboardMarkup(inline_keyboard=[money_list])
button_8043 = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—Å—è –≤ –õ–ö', callback_data="back")],[InlineKeyboardButton(text='‚úÖ –ö—É–ø–∏—Ç—å', callback_data="buy_8043")]])
menu = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–ü–æ–ø–æ–ª–Ω–∏—Ç—å üì•', callback_data='–ø–æ–ø–æ–ª–Ω–∏—Ç—å'),InlineKeyboardButton(text='–í—ã–≤–µ—Å—Ç–∏ üì§', callback_data='–í—ã–≤–µ—Å—Ç–∏')],[InlineKeyboardButton(text="–ú–æ–∏ NFT üíµ",callback_data="My_NFT")],[InlineKeyboardButton(text="–°–º–µ–Ω–∏—Ç—å –≤–∞–ª—é—Ç—É üñº",callback_data="money")]])
info = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='üë®üèª‚Äçüíª –¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url="https://t.me/SuperRare_Supporting")],[InlineKeyboardButton(text='–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ', url="https://t.me/SuperRare_Supporting")]])
router = Router()
bot = Bot(TOKEN, parse_mode="HTML")
dp = Dispatcher()


@router.message(Command(commands=["start"]))
async def command_start_handler(message: Message) -> None:
 """ if db.get(f'—è–∑—ã–∫_{message.chat.id}') is None:"""
 if db.get(f'money_{message.chat.id}') is None:
  await bot.send_message(chat_id=message.chat.id,text="""<b>en : Choose language\n\nru : –í—ã–±–µ—Ä–µ—Ç–µ —è–∑—ã–∫ </b>""", reply_markup=markup)
 else:
    await bot.send_message(chat_id=message.chat.id,text="‚úÖ",reply_markup = keyboard)
    await bot.send_photo(chat_id=message.chat.id, photo=FSInputFile("–ù–§–¢ –±–æ—Ç/–õ–∏—á–∫–∞.jpg"),caption=f"<b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n–ë–∞–ª–∞–Ω—Å : <b>{db.get(f'money_count_{message.chat.id}') or '0.0'} {db.get(f'money_{message.chat.id}')}</b>\n–ù–∞ –≤—ã–≤–æ–¥–µ : <b>{db.get(f'–≤—ã–≤–æ–¥_{message.chat.id}') or '0.0'} {db.get(f'money_{message.chat.id}')}</b>\n\n–£—Ä–æ–≤–µ–Ω—å –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ : {db.get(f'verif_{message.chat.id}') or '‚ö†Ô∏è –ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω'}\n–í–∞—à ID : <b>{message.chat.id}</b>\n\n–í—Ä–µ–º—è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ : <b>{db.get(f'time_{message.chat.id}')}</b>", reply_markup=menu)

#await message.answer("""<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ ‚ÄúSuperRare‚Äù üìö </b>\n\n<a href='https://telegra.ph/Polzovatelskoe-soglashenie-SuperRare-03-23'>–ü–æ–ª–∏—Ç–∏–∫–∞ –∏ —É—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã–º –±–æ—Ç–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –∏—Ö –ø—Ä–µ–∂–¥–µ —Ç–µ–º –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞</a>""", reply_markup=inline_kb)
@router.callback_query()
async def my_handler(query: CallbackQuery):
   crypton_button = InlineKeyboardBuilder()
   now_utc = datetime.now(timezone('UTC'))
   price_8984 = db.get(f'price_8984') or "4.697.03"
   Cryptopunks_button = InlineKeyboardBuilder() 
   now_Moscow = now_utc.astimezone(timezone('Europe/Moscow'))
   if query.data == "Cryptopunks":
      Cryptopunks_count = 0
      if db.get(f'CryptoPunk #8984_{query.message.chat.id}') is None:
          Cryptopunks_count += 1
      if db.get(f'CryptoPunk #1084_{query.message.chat.id}') is None:
          crypton_button.button(text=f'CryptoPunk #1084 (‚âà ‚ÇΩ{Currency(db.get(f"CryptoPunk #1084_price") or str(94)).rub()})',callback_data='#1084')
          
          Cryptopunks_count += 1
      if db.get(f'CryptoPunk #8043_{query.message.chat.id}') is None:Cryptopunks_count += 1  
      await bot.edit_message_caption(chat_id=query.message.chat.id,
                                     message_id=query.message.message_id,
                                     caption=f"<b>üí† –ö–æ–ª–ª–µ–∫—Ü–∏—è Cryptopunks\n\n</b>–¢–æ–∫–µ–Ω–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {Cryptopunks_count or 0}",
                                     reply_markup=crypton_button.as_markup())

   if query.data == "#8043":
       await bot.delete_message(chat_id=query.message.chat.id,message_id=query.message.message_id)   #üë©‚Äçüíª –ê–≤—Ç–æ—Ä: C352B5
       await bot.send_photo(chat_id=query.message.chat.id, photo=FSInputFile("–ù–§–¢ –±–æ—Ç/NFT/1 nft.jpg"),caption=f"üí† –¢–æ–∫–µ–Ω <b>CryptoPunk #8043</b>\n\nüóÇ –ö–æ–ª–ª–µ–∫—Ü–∏—è: Cryptopunks\nüë©‚Äçüíª –ê–≤—Ç–æ—Ä: C352B5\nüîπ –ë–ª–æ–∫—á–µ–π–Ω: Ethereum\n\nüí∏ –¶–µ–Ω–∞: ${db.get(f'CryptoPunk #1084_price') or str(3,877.53)} (~ {Currency(db.get(f'CryptoPunk #1084_price') or str(3,877.53)).rub()}‚ÇΩ)", reply_markup=button_8043)

   if query.data == "–ø–æ–ø–æ–ª–Ω–∏—Ç—å":
       await bot.delete_message(chat_id=query.message.chat.id,message_id=query.message.message_id)
       await bot.send_photo(chat_id=query.message.chat.id, photo=FSInputFile("–ù–§–¢ –±–æ—Ç/super.webp"),caption=f"<b>–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –ü–µ—Ä–µ–≤–æ–¥</b>\n\n–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞ —á–µ—Ä–µ–∑ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –æ–¥–Ω–∏–º –∏–∑ —Å–µ—Ä–≤–∏—Å–æ–≤:\n- <a href='https://paysend.com/'>Paysend</a>\n\n–°—Ç—Ä–∞–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: –í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∞\n–°—Ç—Ä–∞–Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—å: –£–∫—Ä–∞–∏–Ω–∞\n–ö–∞—Ä—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è: 5355280017036524\n–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è: Looks Rare\n\n\n–ü–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Å–ª—É–∂–±—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à —Å—á–µ—Ç.", reply_markup=send)
   if query.data == "ru":
      db.set(f'language_{query.message.chat.id}','ru')
      await bot.edit_message_text(chat_id=query.message.chat.id,message_id=query.message.message_id,text="<b>üí≤–í—ã–±–µ—Ä–µ—Ç–µ –≤–∞–ª—é—Ç—ã</b>",reply_markup=money)
   if query.data == "rub":
      await bot.send_message(chat_id=query.message.chat.id,text="‚úÖ",reply_markup = keyboard)
      await bot.delete_message(chat_id=query.message.chat.id,message_id=query.message.message_id)
      db.set(f'time_{query.message.chat.id}',now_Moscow.strftime(format))
      db.set(f'money_{query.message.chat.id}','RUB') # FSInputFile("C:/Users/–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä/OneDrive/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/–∑–∞–∫–∞–∑—ã/–ù–§–¢ –±–æ—Ç/u.png")
      await bot.send_photo(chat_id=query.message.chat.id, photo=FSInputFile("–ù–§–¢ –±–æ—Ç/–õ–∏—á–∫–∞.jpg"),caption=f"<b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n–ë–∞–ª–∞–Ω—Å : <b>{db.get(f'money_count_{query.message.chat.id}') or '0.0'} {db.get(f'money_{query.message.chat.id}')}</b>\n–ù–∞ –≤—ã–≤–æ–¥–µ : <b>{db.get(f'–≤—ã–≤–æ–¥_{query.message.chat.id}') or '0.0'} {db.get(f'money_{query.message.chat.id}')}</b>\n\n–£—Ä–æ–≤–µ–Ω—å –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ : {db.get(f'verif_{query.message.chat.id}') or '‚ö†Ô∏è –ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω'}\n–í–∞—à ID : <b>{query.message.chat.id}</b>\n\n–í—Ä–µ–º—è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ : <b>{db.get(f'time_{query.message.chat.id}')}</b>", reply_markup=menu)
   if query.data == "accept":
      await bot.edit_message_text(chat_id=query.message.chat.id,message_id=query.message.message_id,text="<b>–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ,—á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –¥–∞–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ –≤–∞–ª—é—Ç—ã</b>")
      await asyncio.sleep(2)
      await bot.edit_message_text(chat_id=query.message.chat.id,message_id=query.message.message_id,text="<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>")
   if query.data == "back":
      await bot.delete_message(chat_id=query.message.chat.id,message_id=query.message.message_id)
      await bot.send_photo(chat_id=query.message.chat.id, photo=FSInputFile("–ù–§–¢ –±–æ—Ç/–õ–∏—á–∫–∞.jpg"),caption=f"<b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n–ë–∞–ª–∞–Ω—Å : <b>{db.get(f'money_count_{query.message.chat.id}') or '0.0'} {db.get(f'money_{query.message.chat.id}')}</b>\n–ù–∞ –≤—ã–≤–æ–¥–µ : <b>{db.get(f'–≤—ã–≤–æ–¥_{query.message.chat.id}') or '0.0'} {db.get(f'money_{query.message.chat.id}')}</b>\n\n–£—Ä–æ–≤–µ–Ω—å –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ : {db.get(f'verif_{query.message.chat.id}') or '‚ö†Ô∏è –ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω'}\n–í–∞—à ID : <b>{query.message.chat.id}</b>\n\n–í—Ä–µ–º—è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ : <b>{db.get(f'time_{query.message.chat.id}')}</b>", reply_markup=menu)
   print(query.message.chat.id)
   print(query.data)


@router.message()
async def command_start_handler(message: Message) -> None:
 """ if db.get(f'—è–∑—ã–∫_{message.chat.id}') is None:"""
 print(message.text)
 if message.text == "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüìñ":
     await bot.send_photo(chat_id=message.chat.id, photo=FSInputFile("–ù–§–¢ –±–æ—Ç/–õ–∏—á–∫–∞.jpg"),caption=f"<b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n–ë–∞–ª–∞–Ω—Å : <b>{db.get(f'money_count_{message.chat.id}') or '0.0'} {db.get(f'money_{message.chat.id}')}</b>\n–ù–∞ –≤—ã–≤–æ–¥–µ : <b>{db.get(f'–≤—ã–≤–æ–¥_{message.chat.id}') or '0.0'} {db.get(f'money_{message.chat.id}')}</b>\n\n–£—Ä–æ–≤–µ–Ω—å –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ : {db.get(f'verif_{message.chat.id}') or '‚ö†Ô∏è –ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω'}\n–í–∞—à ID : <b>{message.chat.id}</b>\n\n–í—Ä–µ–º—è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ : <b>{db.get(f'time_{message.chat.id}')}</b>", reply_markup=menu)
 if message.text == "Info ‚ÑπÔ∏è":
    await bot.send_photo(chat_id=message.chat.id, photo=FSInputFile("–ù–§–¢ –±–æ—Ç/–∏–Ω—Ñ–æ.jpg"),caption=f"<b>üîπ –û –°–µ—Ä–≤–∏—Å–µ</b>\n\nSuperRare - <b>—Ç–æ—Ä–≥–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –¥–ª—è –Ω–µ–≤–∑–∞–∏–º–æ–∑–∞–º–µ–Ω—è–µ–º—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ (NFT). –ü–æ–∫—É–ø–∞–π—Ç–µ, –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ –∏ –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –¥–ª—è —Å–µ–±—è —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ü–∏—Ñ—Ä–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã.</b>", reply_markup=info)
 if message.text == "–¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ üë®üèª‚Äçüíª":
    await bot.send_photo(chat_id=message.chat.id, photo=FSInputFile("–ù–§–¢ –±–æ—Ç/—Å–∞–ø.jpg"),caption=f"<b>–ü—Ä–∞–≤–∏–ª–∞</b> –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –¢–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ü–æ–¥–¥–µ—Ä–∂–∫—É:\n\nüîπ1. <b>–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å, –∏–∑–ª–æ–∂–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏</b> - –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –í–∞–º –ø–æ–º–æ—á—å.\n\nüîπ2. <b>–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π ID</b> - –Ω–∞–º —ç—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å, –∏ —É–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º—ã.\n\nüîπ3. <b>–ë—É–¥—å—Ç–µ –≤–µ–∂–ª–∏–≤—ã, –Ω–∞—à–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—ã –Ω–µ —Ä–æ–±–æ—Ç—ã, –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–æ–º–æ—á—å –í–∞–º, –∏ —Å–¥–µ–ª–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ, —á—Ç–æ–±—ã —Å–±–µ—Ä–µ—á—å –≤–∞—à–µ –≤—Ä–µ–º—è –∏ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —Ä–∞–±–æ—Ç–µ.</b>\n\n–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –æ—Ç–≤–µ—Ç –ü–æ–¥–¥–µ—Ä–∂–∫–∏, –Ω–µ –∑–∞—Å—Ç–∞–≤–∏—Ç –≤–∞—Å –¥–æ–ª–≥–æ –∂–¥–∞—Ç—å!", reply_markup=support)
 if message.text == "NFT üñº":
    await bot.send_photo(chat_id=message.chat.id, photo=FSInputFile("–ù–§–¢ –±–æ—Ç/–Ω—Ñ—Ç.jpg"),caption=f"<b>üí† There are 13 collections on the marketplace</b>", reply_markup=collection)



async def main() -> None:
    # Dispatcher is a root router
    # ... and all other routers should be attached to Dispatcher
    dp.include_router(router)

    # Initialize Bot instance with a default parse mode which will be passed to all API calls
    bot = Bot(TOKEN, parse_mode="HTML")
    # And the run events dispatching
    await dp.start_polling(bot)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    asyncio.run(main())